//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.03.16 at 03:54:53 CET 
//


package be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl;

public class RttMeasurementRequestTypeImpl implements be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _RequestList;
    public final static java.lang.Class version = (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getRequestList() {
        if (_RequestList == null) {
            _RequestList = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _RequestList;
    }

    public java.util.List getRequestList() {
        return _getRequestList();
    }

    public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
        return new be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_RequestList == null)? 0 :_RequestList.size());
        while (idx1 != len1) {
            context.startElement("", "requestList");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RequestList.get(idx_0 ++)), "RequestList");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RequestList.get(idx_1 ++)), "RequestList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RequestList.get(idx1 ++)), "RequestList");
            context.endElement();
        }
    }

    public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_RequestList == null)? 0 :_RequestList.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_RequestList == null)? 0 :_RequestList.size());
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001psr\u0000 com.sun.msv.grammar.AnyNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~"
+"\u0000\u001at\u0000\\be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttM"
+"easurementRequestType.RequestListTypet\u0000+http://java.sun.com/"
+"jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\b"
+"typeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QName"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004"
+"typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et"
+"\u0000\u000brequestListt\u0000\u0000q\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000#q\u0000~\u0000\u0013q\u0000~\u0000\u0012q\u0000~\u0000\u0005q\u0000~\u0000\bq\u0000"
+"~\u0000\u0010x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class RequestListTypeImpl implements be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _SubnetDNS;
        protected com.sun.xml.bind.util.ListImpl _Request;
        public final static java.lang.Class version = (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getSubnetDNS() {
            if (_SubnetDNS == null) {
                _SubnetDNS = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _SubnetDNS;
        }

        public java.util.List getSubnetDNS() {
            return _getSubnetDNS();
        }

        protected com.sun.xml.bind.util.ListImpl _getRequest() {
            if (_Request == null) {
                _Request = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Request;
        }

        public java.util.List getRequest() {
            return _getRequest();
        }

        public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
            return new be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubnetDNS == null)? 0 :_SubnetDNS.size());
            int idx2 = 0;
            final int len2 = ((_Request == null)? 0 :_Request.size());
            while (idx1 != len1) {
                context.startElement("", "subnetDNS");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubnetDNS.get(idx_0 ++)), "SubnetDNS");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubnetDNS.get(idx_1 ++)), "SubnetDNS");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubnetDNS.get(idx1 ++)), "SubnetDNS");
                context.endElement();
            }
            while (idx2 != len2) {
                context.startElement("", "request");
                int idx_2 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Request.get(idx_2 ++)), "Request");
                context.endNamespaceDecls();
                int idx_3 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Request.get(idx_3 ++)), "Request");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Request.get(idx2 ++)), "Request");
                context.endElement();
            }
        }

        public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubnetDNS == null)? 0 :_SubnetDNS.size());
            int idx2 = 0;
            final int len2 = ((_Request == null)? 0 :_Request.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
            while (idx2 != len2) {
                idx2 += 1;
            }
        }

        public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_SubnetDNS == null)? 0 :_SubnetDNS.size());
            int idx2 = 0;
            final int len2 = ((_Request == null)? 0 :_Request.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
            while (idx2 != len2) {
                idx2 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
+"\u0002xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun"
+".msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribu"
+"tesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sr\u0000\u001dcom.sun"
+".msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0006sr\u0000\u0011java.lang"
+".Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003q\u0000~\u0000\u0013psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
+"calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000jbe."
+"ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasureme"
+"ntRequestType.RequestListType.SubnetDNSTypet\u0000+http://java.su"
+"n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000fppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013psr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun"
+".msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000"
+"~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd"
+"/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000"
+"\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Colla"
+"pse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001e"
+"jB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000"
+"~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001et\u0000\tsubnetDNSt\u0000\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u000f"
+"ppsq\u0000~\u0000\u0006q\u0000~\u0000\u0013psq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000hbe.ac.ucl."
+"ingi.totem.measurementRequest.model.jaxb.RttMeasurementReque"
+"stType.RequestListType.RequestTypeq\u0000~\u0000\"sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0014q\u0000~\u0000\u0013pq"
+"\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0007requestq\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parent"
+"t\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000#q\u0000~\u0000Gq\u0000~"
+"\u0000\u0011q\u0000~\u0000Cq\u0000~\u0000\u0010q\u0000~\u0000Bq\u0000~\u0000\bq\u0000~\u0000>q\u0000~\u0000\u0005q\u0000~\u0000\rq\u0000~\u0000@x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class RequestTypeImpl implements be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
        {

            protected java.util.Calendar _StartTime;
            protected be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.PoissonParametersType _PoissonParameters;
            protected java.lang.String _MeasurementMethod;
            protected java.math.BigInteger _NumberOfQueries;
            protected boolean has_RandomizeDnsInList;
            protected boolean _RandomizeDnsInList;
            public final static java.lang.Class version = (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.class);
            }

            public java.util.Calendar getStartTime() {
                return _StartTime;
            }

            public void setStartTime(java.util.Calendar value) {
                _StartTime = value;
            }

            public be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.PoissonParametersType getPoissonParameters() {
                return _PoissonParameters;
            }

            public void setPoissonParameters(be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.PoissonParametersType value) {
                _PoissonParameters = value;
            }

            public java.lang.String getMeasurementMethod() {
                return _MeasurementMethod;
            }

            public void setMeasurementMethod(java.lang.String value) {
                _MeasurementMethod = value;
            }

            public java.math.BigInteger getNumberOfQueries() {
                return _NumberOfQueries;
            }

            public void setNumberOfQueries(java.math.BigInteger value) {
                _NumberOfQueries = value;
            }

            public boolean isRandomizeDnsInList() {
                return _RandomizeDnsInList;
            }

            public void setRandomizeDnsInList(boolean value) {
                _RandomizeDnsInList = value;
                has_RandomizeDnsInList = true;
            }

            public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                return new be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_RandomizeDnsInList) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "RandomizeDnsInList"));
                }
                context.startElement("", "startTime");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StartTime), null), "StartTime");
                } catch (java.lang.Exception e) {
                    be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("", "poissonParameters");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PoissonParameters), "PoissonParameters");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PoissonParameters), "PoissonParameters");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PoissonParameters), "PoissonParameters");
                context.endElement();
                context.startElement("", "measurementMethod");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _MeasurementMethod), "MeasurementMethod");
                } catch (java.lang.Exception e) {
                    be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("", "numberOfQueries");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _NumberOfQueries)), "NumberOfQueries");
                } catch (java.lang.Exception e) {
                    be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
                context.startElement("", "randomizeDnsInList");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RandomizeDnsInList)), "RandomizeDnsInList");
                } catch (java.lang.Exception e) {
                    be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }

            public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_RandomizeDnsInList) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "RandomizeDnsInList"));
                }
            }

            public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                if (!has_RandomizeDnsInList) {
                    context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "RandomizeDnsInList"));
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000%com.sun.msv.datatyp"
+"e.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.Da"
+"teTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017"
+"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"
+"r;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\bdateTimesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Att"
+"ributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003sr\u0000\u0011ja"
+"va.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000eppsr\u0000\"com.sun.ms"
+"v.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNameq\u0000~\u0000\u001eq"
+"\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000,q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.m"
+"sv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org"
+"/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$E"
+"psilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\'\u0001psq\u0000~\u0000.t\u0000\tstartTimet"
+"\u0000\u0000sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000#ppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000(psq\u0000~\u0000%q\u0000~\u0000(psr\u00002com.sun.msv.gra"
+"mmar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00005psr"
+"\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~\u00004sq\u0000~"
+"\u0000.t\u0000~be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttM"
+"easurementRequestType.RequestListType.RequestType.PoissonPar"
+"ametersTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000"
+"~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000(pq\u0000~\u0000)q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0011poissonParametersq\u0000"
+"~\u00008sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000)com.sun.msv.datatype.xsd.Enu"
+"merationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.s"
+"un.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005"
+"Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/m"
+"sv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/ms"
+"v/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016q\u0000~\u00008t\u0000\u0014r"
+"ttMeasurementMethodsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001d\u0000\u0000sr\u0000#com.sun.msv.datatype."
+"xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0006strin"
+"gq\u0000~\u0000X\u0001q\u0000~\u0000Zt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xp"
+"w\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\fdnsTcpSynAckt\u0000\bicmpPingt\u0000\bdnsQueryxq\u0000~\u0000 sq\u0000"
+"~\u0000!q\u0000~\u0000Vq\u0000~\u00008sq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000(pq\u0000~\u0000)q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0011mea"
+"surementMethodq\u0000~\u00008sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000,com.sun.msv."
+"datatype.xsd.PositiveIntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.d"
+"atatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.x"
+"sd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000Sxq\u0000~\u0000\u0014q\u0000~\u0000"
+"\u001at\u0000\u000fpositiveIntegerq\u0000~\u0000\u001esr\u0000*com.sun.msv.datatype.xsd.MinIncl"
+"usiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xq\u0000~\u0000Qppq\u0000~\u0000\u001e\u0000\u0000"
+"sr\u0000/com.sun.msv.datatype.xsd.NonNegativeIntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000kq\u0000~\u0000\u001at\u0000\u0012nonNegativeIntegerq\u0000~\u0000\u001esq\u0000~\u0000oppq\u0000~\u0000\u001e\u0000\u0000sq\u0000~\u0000k"
+"q\u0000~\u0000\u001at\u0000\u0007integerq\u0000~\u0000\u001esr\u0000,com.sun.msv.datatype.xsd.FractionDig"
+"itsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.Data"
+"TypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Rppq\u0000~\u0000\u001e\u0001\u0000sr\u0000#"
+"com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007"
+"decimalq\u0000~\u0000\u001eq\u0000~\u0000}t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000wt\u0000\fminInclusivesr"
+"\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005val"
+"ueq\u0000~\u0000\u0017xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010q\u0000~\u0000tq\u0000~\u0000\u0080sq\u0000~\u0000\u0081"
+"t\u0000\u00011q\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000nq\u0000~\u0000\u001asq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000(pq\u0000~\u0000)q\u0000~\u00000q\u0000~\u00004"
+"sq\u0000~\u0000.t\u0000\u000fnumberOfQueriesq\u0000~\u00008sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000$co"
+"m.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007b"
+"ooleanq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000\u0091q\u0000~\u0000\u001asq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000(pq\u0000~\u0000)q\u0000~"
+"\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0012randomizeDnsInListq\u0000~\u00008sr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0010\u0001pq\u0000~\u0000hq\u0000~\u0000"
+"$q\u0000~\u0000Hq\u0000~\u0000cq\u0000~\u0000\u0088q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000?q\u0000~\u0000\bq\u0000~\u0000<q\u0000~\u0000\u0006q\u0000~\u0000Mq\u0000~\u0000\rq\u0000~\u0000"
+":q\u0000~\u0000\u0005q\u0000~\u0000\u0007x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public static class PoissonParametersTypeImpl implements be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.PoissonParametersType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
            {

                protected boolean has_TakeFirstMeasureDirectly;
                protected boolean _TakeFirstMeasureDirectly;
                protected java.lang.String _TimingUnits;
                protected java.math.BigInteger _NumberOfObservations;
                protected java.math.BigDecimal _Lambda;
                protected boolean has_PoissonDistribution;
                protected boolean _PoissonDistribution;
                public final static java.lang.Class version = (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.JAXBVersion.class);
                private static com.sun.msv.grammar.Grammar schemaFragment;

                private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                    return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.PoissonParametersType.class);
                }

                public boolean isTakeFirstMeasureDirectly() {
                    return _TakeFirstMeasureDirectly;
                }

                public void setTakeFirstMeasureDirectly(boolean value) {
                    _TakeFirstMeasureDirectly = value;
                    has_TakeFirstMeasureDirectly = true;
                }

                public java.lang.String getTimingUnits() {
                    return _TimingUnits;
                }

                public void setTimingUnits(java.lang.String value) {
                    _TimingUnits = value;
                }

                public java.math.BigInteger getNumberOfObservations() {
                    return _NumberOfObservations;
                }

                public void setNumberOfObservations(java.math.BigInteger value) {
                    _NumberOfObservations = value;
                }

                public java.math.BigDecimal getLambda() {
                    return _Lambda;
                }

                public void setLambda(java.math.BigDecimal value) {
                    _Lambda = value;
                }

                public boolean isPoissonDistribution() {
                    return _PoissonDistribution;
                }

                public void setPoissonDistribution(boolean value) {
                    _PoissonDistribution = value;
                    has_PoissonDistribution = true;
                }

                public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                    return new be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.PoissonParametersTypeImpl.Unmarshaller(context);
                }

                public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (!has_TakeFirstMeasureDirectly) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TakeFirstMeasureDirectly"));
                    }
                    if (!has_PoissonDistribution) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "PoissonDistribution"));
                    }
                    context.startElement("", "poissonDistribution");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _PoissonDistribution)), "PoissonDistribution");
                    } catch (java.lang.Exception e) {
                        be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("", "numberOfObservations");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _NumberOfObservations)), "NumberOfObservations");
                    } catch (java.lang.Exception e) {
                        be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("", "lambda");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Lambda)), "Lambda");
                    } catch (java.lang.Exception e) {
                        be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("", "timingUnits");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(((java.lang.String) _TimingUnits), "TimingUnits");
                    } catch (java.lang.Exception e) {
                        be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                    context.startElement("", "takeFirstMeasureDirectly");
                    context.endNamespaceDecls();
                    context.endAttributes();
                    try {
                        context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _TakeFirstMeasureDirectly)), "TakeFirstMeasureDirectly");
                    } catch (java.lang.Exception e) {
                        be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
                    }
                    context.endElement();
                }

                public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (!has_TakeFirstMeasureDirectly) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TakeFirstMeasureDirectly"));
                    }
                    if (!has_PoissonDistribution) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "PoissonDistribution"));
                    }
                }

                public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException
                {
                    if (!has_TakeFirstMeasureDirectly) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "TakeFirstMeasureDirectly"));
                    }
                    if (!has_PoissonDistribution) {
                        context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "PoissonDistribution"));
                    }
                }

                public java.lang.Class getPrimaryInterface() {
                    return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.RequestType.PoissonParametersType.class);
                }

                public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                    if (schemaFragment == null) {
                        schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatyp"
+"e.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Bui"
+"ltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concre"
+"teType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000"
+"~\u0000\u0016L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"psr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpq\u0000~\u0000\u001aq\u0000~\u0000\u0019sr\u0000\u001dcom.sun.msv.g"
+"rammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.A"
+"ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u000eppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0005QNameq\u0000~\u0000"
+"\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000+q\u0000~\u0000\u0019sr\u0000#com.sun.msv.grammar.SimpleNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.o"
+"rg/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000&\u0001psq\u0000~\u0000-t\u0000\u0013poissonD"
+"istributiont\u0000\u0000sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000$com.sun.msv.datat"
+"ype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.I"
+"ntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dat"
+"atype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0007integerq\u0000~\u0000\u001dsr\u0000,com.s"
+"un.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr"
+"\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFace"
+"tT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000"
+"=L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000"
+"\tfacetNameq\u0000~\u0000\u0016xq\u0000~\u0000\u0015ppq\u0000~\u0000\u001d\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.N"
+"umberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0007decimalq\u0000~\u0000\u001dq\u0000~\u0000Ft\u0000\u000efracti"
+"onDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000?q\u0000~\u0000\u0019sq\u0000~\u0000\"ppsq\u0000~\u0000$q\u0000~\u0000\'pq\u0000~\u0000(q\u0000"
+"~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0014numberOfObservationsq\u0000~\u00007sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u000eppq\u0000~\u0000Fq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000Gq\u0000~\u0000\u0019sq\u0000~\u0000\"ppsq\u0000~\u0000$q\u0000~\u0000\'pq\u0000~\u0000(q\u0000"
+"~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0006lambdaq\u0000~\u00007sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eppsr\u0000)com"
+".sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000"
+"\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithVal"
+"ueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u00007t\u0000\ndelayUnitssr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u001c\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000"
+"\risAlwaysValidxq\u0000~\u0000\u0013q\u0000~\u0000\u0019t\u0000\u0006stringq\u0000~\u0000_\u0001q\u0000~\u0000at\u0000\u000benumerations"
+"r\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0002mst\u0000\u0003\u00c2\u00b5st\u0000"
+"\u0002nst\u0000\u0001sxq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000]q\u0000~\u00007sq\u0000~\u0000\"ppsq\u0000~\u0000$q\u0000~\u0000\'pq\u0000~\u0000(q\u0000~\u0000/q"
+"\u0000~\u00003sq\u0000~\u0000-t\u0000\u000btimingUnitsq\u0000~\u00007sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0011sq\u0000~\u0000\"pps"
+"q\u0000~\u0000$q\u0000~\u0000\'pq\u0000~\u0000(q\u0000~\u0000/q\u0000~\u00003sq\u0000~\u0000-t\u0000\u0018takeFirstMeasureDirectlyq"
+"\u0000~\u00007sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000\u000e\u0001pq\u0000~\u0000Oq\u0000~\u0000#q\u0000~\u0000Jq\u0000~\u0000Rq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000\rq\u0000~\u0000pq\u0000~\u0000"
+"Wq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u00009x"));
                    }
                    return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
                }

                public class Unmarshaller
                    extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
                {


                    public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                        super(context, "----------------");
                    }

                    protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
                        this(context);
                        state = startState;
                    }

                    public java.lang.Object owner() {
                        return be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.PoissonParametersTypeImpl.this;
                    }

                    public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  12 :
                                    if (("takeFirstMeasureDirectly" == ___local)&&("" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 13;
                                        return ;
                                    }
                                    break;
                                case  3 :
                                    if (("numberOfObservations" == ___local)&&("" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 4;
                                        return ;
                                    }
                                    break;
                                case  0 :
                                    if (("poissonDistribution" == ___local)&&("" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 1;
                                        return ;
                                    }
                                    break;
                                case  9 :
                                    if (("timingUnits" == ___local)&&("" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 10;
                                        return ;
                                    }
                                    break;
                                case  6 :
                                    if (("lambda" == ___local)&&("" == ___uri)) {
                                        context.pushAttributes(__atts, true);
                                        state = 7;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                    return ;
                            }
                            super.enterElement(___uri, ___local, ___qname, __atts);
                            break;
                        }
                    }

                    public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  8 :
                                    if (("lambda" == ___local)&&("" == ___uri)) {
                                        context.popAttributes();
                                        state = 9;
                                        return ;
                                    }
                                    break;
                                case  5 :
                                    if (("numberOfObservations" == ___local)&&("" == ___uri)) {
                                        context.popAttributes();
                                        state = 6;
                                        return ;
                                    }
                                    break;
                                case  2 :
                                    if (("poissonDistribution" == ___local)&&("" == ___uri)) {
                                        context.popAttributes();
                                        state = 3;
                                        return ;
                                    }
                                    break;
                                case  14 :
                                    if (("takeFirstMeasureDirectly" == ___local)&&("" == ___uri)) {
                                        context.popAttributes();
                                        state = 15;
                                        return ;
                                    }
                                    break;
                                case  15 :
                                    revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                    return ;
                                case  11 :
                                    if (("timingUnits" == ___local)&&("" == ___uri)) {
                                        context.popAttributes();
                                        state = 12;
                                        return ;
                                    }
                                    break;
                            }
                            super.leaveElement(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.enterAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            switch (state) {
                                case  15 :
                                    revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                    return ;
                            }
                            super.leaveAttribute(___uri, ___local, ___qname);
                            break;
                        }
                    }

                    public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        int attIdx;
                        outer:
                        while (true) {
                            try {
                                switch (state) {
                                    case  13 :
                                        eatText1(value);
                                        state = 14;
                                        return ;
                                    case  1 :
                                        eatText2(value);
                                        state = 2;
                                        return ;
                                    case  4 :
                                        eatText3(value);
                                        state = 5;
                                        return ;
                                    case  7 :
                                        eatText4(value);
                                        state = 8;
                                        return ;
                                    case  15 :
                                        revertToParentFromText(value);
                                        return ;
                                    case  10 :
                                        eatText5(value);
                                        state = 11;
                                        return ;
                                }
                            } catch (java.lang.RuntimeException e) {
                                handleUnexpectedTextException(value, e);
                            }
                            break;
                        }
                    }

                    private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _TakeFirstMeasureDirectly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_TakeFirstMeasureDirectly = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _PoissonDistribution = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_PoissonDistribution = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _NumberOfObservations = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _Lambda = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                    private void eatText5(final java.lang.String value)
                        throws org.xml.sax.SAXException
                    {
                        try {
                            _TimingUnits = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                    }

                }

            }

            public class Unmarshaller
                extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                    super(context, "----------------");
                }

                protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  0 :
                                if (("startTime" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  9 :
                                if (("numberOfQueries" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 10;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("poissonParameters" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                break;
                            case  4 :
                                if (("poissonDistribution" == ___local)&&("" == ___uri)) {
                                    _PoissonParameters = ((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.PoissonParametersTypeImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.PoissonParametersTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                            case  12 :
                                if (("randomizeDnsInList" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 13;
                                    return ;
                                }
                                break;
                            case  15 :
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  6 :
                                if (("measurementMethod" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, true);
                                    state = 7;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  8 :
                                if (("measurementMethod" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 9;
                                    return ;
                                }
                                break;
                            case  11 :
                                if (("numberOfQueries" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 12;
                                    return ;
                                }
                                break;
                            case  14 :
                                if (("randomizeDnsInList" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 15;
                                    return ;
                                }
                                break;
                            case  15 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("startTime" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("poissonParameters" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  15 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  7 :
                                    eatText1(value);
                                    state = 8;
                                    return ;
                                case  15 :
                                    revertToParentFromText(value);
                                    return ;
                                case  13 :
                                    eatText2(value);
                                    state = 14;
                                    return ;
                                case  1 :
                                    eatText3(value);
                                    state = 2;
                                    return ;
                                case  10 :
                                    eatText4(value);
                                    state = 11;
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _MeasurementMethod = value;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _RandomizeDnsInList = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                        has_RandomizeDnsInList = true;
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _StartTime = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    try {
                        _NumberOfQueries = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    } catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

            }

        }

        public static class SubnetDNSTypeImpl implements be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.SubnetDNSType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
        {

            protected com.sun.xml.bind.util.ListImpl _DnsServer;
            protected be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.Subnet _Subnet;
            public final static java.lang.Class version = (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.SubnetDNSType.class);
            }

            protected com.sun.xml.bind.util.ListImpl _getDnsServer() {
                if (_DnsServer == null) {
                    _DnsServer = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
                }
                return _DnsServer;
            }

            public java.util.List getDnsServer() {
                return _getDnsServer();
            }

            public be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.Subnet getSubnet() {
                return _Subnet;
            }

            public void setSubnet(be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.Subnet value) {
                _Subnet = value;
            }

            public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                return new be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.SubnetDNSTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_DnsServer == null)? 0 :_DnsServer.size());
                context.startElement("", "subnet");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Subnet), "Subnet");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Subnet), "Subnet");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Subnet), "Subnet");
                context.endElement();
                while (idx1 != len1) {
                    context.startElement("", "dnsServer");
                    int idx_2 = idx1;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DnsServer.get(idx_2 ++)), "DnsServer");
                    context.endNamespaceDecls();
                    int idx_3 = idx1;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DnsServer.get(idx_3 ++)), "DnsServer");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _DnsServer.get(idx1 ++)), "DnsServer");
                    context.endElement();
                }
            }

            public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_DnsServer == null)? 0 :_DnsServer.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException
            {
                int idx1 = 0;
                final int len1 = ((_DnsServer == null)? 0 :_DnsServer.size());
                while (idx1 != len1) {
                    idx1 += 1;
                }
            }

            public java.lang.Class getPrimaryInterface() {
                return (be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.RttMeasurementRequestType.RequestListType.SubnetDNSType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000"
+"sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com."
+"sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
+"ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean"
+"\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
+"n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003sq\u0000~\u0000\u0011\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001d"
+"com.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u0000"
+"#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet"
+"\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u00009be.ac.ucl.i"
+"ngi.totem.measurementRequest.model.jaxb.Subnett\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"iq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000."
+"sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~"
+"\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0006subnett\u0000\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\f"
+"ppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000<be.ac.ucl."
+"ingi.totem.measurementRequest.model.jaxb.DnsServerq\u0000~\u0000!sq\u0000~\u0000"
+"\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\'q\u0000~\u00007q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\tdnsServerq\u0000~\u0000<sr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
+"amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
+"\u0000\u0000\n\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\"q\u0000~\u0000Fq\u0000~\u0000\u0010q\u0000~\u0000Bq\u0000~\u0000\rq\u0000~\u0000Aq\u0000~\u0000=q\u0000~\u0000\nq\u0000~\u0000?x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
            {


                public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                    super(context, "-------");
                }

                protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.SubnetDNSTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  4 :
                                if (("dnsName" == ___local)&&("" == ___uri)) {
                                    _getDnsServer().add(((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.DnsServerImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.DnsServerImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                if (("dnsAddress" == ___local)&&("" == ___uri)) {
                                    _getDnsServer().add(((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.DnsServerImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.DnsServerImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                    return ;
                                }
                                break;
                            case  1 :
                                if (("address" == ___local)&&("" == ___uri)) {
                                    _Subnet = ((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.SubnetImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.SubnetImpl.class), 2, ___uri, ___local, ___qname, __atts));
                                    return ;
                                }
                                break;
                            case  6 :
                                if (("dnsServer" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            case  0 :
                                if (("subnet" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 1;
                                    return ;
                                }
                                break;
                            case  3 :
                                if (("dnsServer" == ___local)&&("" == ___uri)) {
                                    context.pushAttributes(__atts, false);
                                    state = 4;
                                    return ;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return ;
                            case  2 :
                                if (("subnet" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 3;
                                    return ;
                                }
                                break;
                            case  5 :
                                if (("dnsServer" == ___local)&&("" == ___uri)) {
                                    context.popAttributes();
                                    state = 6;
                                    return ;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case  6 :
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return ;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException
                {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case  6 :
                                    revertToParentFromText(value);
                                    return ;
                            }
                        } catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
            extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
                super(context, "-------");
            }

            protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  4 :
                            if (("startTime" == ___local)&&("" == ___uri)) {
                                _getRequest().add(((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.RequestTypeImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  0 :
                            if (("subnetDNS" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            break;
                        case  3 :
                            if (("subnetDNS" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            if (("request" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            break;
                        case  6 :
                            if (("request" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  1 :
                            if (("subnet" == ___local)&&("" == ___uri)) {
                                _getSubnetDNS().add(((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.SubnetDNSTypeImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.SubnetDNSTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("subnetDNS" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  5 :
                            if (("request" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  6 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
        extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("subnetDNS" == ___local)&&("" == ___uri)) {
                            _getRequestList().add(((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl) spawnChildFromEnterElement((be.ac.ucl.ingi.totem.measurementRequest.model.jaxb.impl.RttMeasurementRequestTypeImpl.RequestListTypeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("requestList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("requestList" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("requestList" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
