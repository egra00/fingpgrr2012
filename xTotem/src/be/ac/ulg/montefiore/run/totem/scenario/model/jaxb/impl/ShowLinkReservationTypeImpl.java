//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.03.28 at 12:33:07 CET 
//


package be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl;

public class ShowLinkReservationTypeImpl
    extends be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl
    implements be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.ShowLinkReservationType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
{

    protected boolean has_PerPrio;
    protected boolean _PerPrio;
    protected boolean has_PreemptionLevel;
    protected int _PreemptionLevel;
    protected java.lang.String _LinkId;
    protected boolean has_PerCT;
    protected boolean _PerCT;
    protected boolean has_PerLink;
    protected boolean _PerLink;
    protected boolean has_ClassType;
    protected int _ClassType;
    public final static java.lang.Class version = (be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.ShowLinkReservationType.class);
    }

    public boolean isPerPrio() {
        return _PerPrio;
    }

    public void setPerPrio(boolean value) {
        _PerPrio = value;
        has_PerPrio = true;
    }

    public boolean isSetPerPrio() {
        return has_PerPrio;
    }

    public void unsetPerPrio() {
        has_PerPrio = false;
    }

    public int getPreemptionLevel() {
        return _PreemptionLevel;
    }

    public void setPreemptionLevel(int value) {
        _PreemptionLevel = value;
        has_PreemptionLevel = true;
    }

    public boolean isSetPreemptionLevel() {
        return has_PreemptionLevel;
    }

    public void unsetPreemptionLevel() {
        has_PreemptionLevel = false;
    }

    public java.lang.String getLinkId() {
        return _LinkId;
    }

    public void setLinkId(java.lang.String value) {
        _LinkId = value;
    }

    public boolean isSetLinkId() {
        return (_LinkId!= null);
    }

    public void unsetLinkId() {
        _LinkId = null;
    }

    public boolean isPerCT() {
        return _PerCT;
    }

    public void setPerCT(boolean value) {
        _PerCT = value;
        has_PerCT = true;
    }

    public boolean isSetPerCT() {
        return has_PerCT;
    }

    public void unsetPerCT() {
        has_PerCT = false;
    }

    public boolean isPerLink() {
        if (!has_PerLink) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("true"));
        } else {
            return _PerLink;
        }
    }

    public void setPerLink(boolean value) {
        _PerLink = value;
        has_PerLink = true;
    }

    public boolean isSetPerLink() {
        return has_PerLink;
    }

    public void unsetPerLink() {
        has_PerLink = false;
    }

    public int getClassType() {
        return _ClassType;
    }

    public void setClassType(int value) {
        _ClassType = value;
        has_ClassType = true;
    }

    public boolean isSetClassType() {
        return has_ClassType;
    }

    public void unsetClassType() {
        has_ClassType = false;
    }

    public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
        return new be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
    }

    public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_ClassType) {
            context.startAttribute("", "classType");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ClassType)), "ClassType");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_LinkId!= null) {
            context.startAttribute("", "linkId");
            try {
                context.text(((java.lang.String) _LinkId), "LinkId");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_PerCT) {
            context.startAttribute("", "perCT");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _PerCT)), "PerCT");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_PerLink) {
            context.startAttribute("", "perLink");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _PerLink)), "PerLink");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_PerPrio) {
            context.startAttribute("", "perPrio");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _PerPrio)), "PerPrio");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_PreemptionLevel) {
            context.startAttribute("", "preemptionLevel");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PreemptionLevel)), "PreemptionLevel");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.ShowLinkReservationType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003sr\u0000\u0011java.l"
+"ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000!"
+"com.sun.msv.datatype.xsd.TimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv."
+"datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatyp"
+"e.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XS"
+"DatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L"
+"\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0004tim"
+"esr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamespaceURIq\u0000~\u0000\u001cxpq\u0000~\u0000 q\u0000~\u0000\u001fsr\u0000#com."
+"sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL"
+"\u0000\fnamespaceURIq\u0000~\u0000\u001cxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpt\u0000\u0004timet\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000.sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~"
+"\u0000\u0013ppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000"
+"\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bb"
+"aseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001bt\u00009"
+"http://jaxb.model.scenario.totem.run.montefiore.ulg.ac.bet\u0000\b"
+"ASIdTypeq\u0000~\u0000#sr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000"
+"\nbaseFacetsq\u0000~\u00005xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0003intq\u0000~\u0000#sr\u0000*com.sun.msv.dataty"
+"pe.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype."
+"xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;x"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u00005"
+"L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\t"
+"facetNameq\u0000~\u0000\u001cxq\u0000~\u0000\u001bppq\u0000~\u0000#\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.Mi"
+"nInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>ppq\u0000~\u0000#\u0000\u0000sr\u0000!com.sun.msv.dat"
+"atype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000\u001ft\u0000\u0004longq\u0000~\u0000#sq\u0000~\u0000=pp"
+"q\u0000~\u0000#\u0000\u0001sq\u0000~\u0000Dppq\u0000~\u0000#\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000\u001ft\u0000\u0007integerq\u0000~\u0000#sr\u0000,com.sun.msv.datat"
+"ype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.ms"
+"v.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000"
+"xq\u0000~\u0000Appq\u0000~\u0000#\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007decimalq\u0000~\u0000#q\u0000~\u0000Rt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~"
+"\u0000Lt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010ja"
+"va.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Lt\u0000\fmaxInclusivesq\u0000~\u0000"
+"V\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Gq\u0000~\u0000Usr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuex"
+"q\u0000~\u0000W\u0080\u0000\u0000\u0000q\u0000~\u0000Gq\u0000~\u0000Ysq\u0000~\u0000[\u007f\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000<q\u0000~\u00007sq\u0000~\u0000("
+"t\u0000\u0004ASIDq\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013ppsr\u0000*com.sun.msv"
+".datatype.xsd.MaxExclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u00007t\u0000\u0006ctTy"
+"peq\u0000~\u0000#\u0000\u0001sq\u0000~\u0000Dq\u0000~\u00007q\u0000~\u0000fq\u0000~\u0000#\u0000\u0000q\u0000~\u0000;q\u0000~\u0000;q\u0000~\u0000Usq\u0000~\u0000[\u0000\u0000\u0000\u0000q\u0000~"
+"\u0000;t\u0000\fmaxExclusivesq\u0000~\u0000[\u0000\u0000\u0000\bq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000fq\u0000~\u00007sq\u0000~\u0000(t\u0000\tcla"
+"ssTypeq\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013ppsq\u0000~\u00003q\u0000~\u00007t\u0000\nli"
+"nkIdTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"sr\u0000#com.sun.msv.datatype.xsd.StringTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0006stringq\u0000~\u0000t\u0001\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000%sq\u0000~\u0000&q\u0000~\u0000wq\u0000~\u00007sq\u0000~\u0000(t\u0000\u0006linkIdq\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000"
+"~\u0000\u0012psq\u0000~\u0000\u0013ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0019q\u0000~\u0000\u001ft\u0000\u0007booleanq\u0000~\u0000#q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000\u0080q\u0000~\u0000\u001fsq\u0000~\u0000(t\u0000\u0005p"
+"erCTq\u0000~\u0000,q\u0000~\u0000.sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012pq\u0000~\u0000}sq\u0000~\u0000(t\u0000\u0007perLinkq\u0000~\u0000,"
+"q\u0000~\u0000.sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012pq\u0000~\u0000}sq\u0000~\u0000(t\u0000\u0007perPrioq\u0000~\u0000,q\u0000~\u0000.sq\u0000~"
+"\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013ppsq\u0000~\u0000dq\u0000~\u00007t\u0000\u000epreemptionTypeq\u0000~\u0000#\u0000\u0001s"
+"q\u0000~\u0000Dq\u0000~\u00007q\u0000~\u0000\u0090q\u0000~\u0000#\u0000\u0000q\u0000~\u0000;q\u0000~\u0000;q\u0000~\u0000Usq\u0000~\u0000[\u0000\u0000\u0000\u0000q\u0000~\u0000;q\u0000~\u0000isq\u0000"
+"~\u0000[\u0000\u0000\u0000\bq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000\u0090q\u0000~\u00007sq\u0000~\u0000(t\u0000\u000fpreemptionLevelq\u0000~\u0000,q\u0000~"
+"\u0000.sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"
+"let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"
+"m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005cou"
+"ntB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressio"
+"nPool;xp\u0000\u0000\u0000\u000f\u0001pq\u0000~\u0000\u000bq\u0000~\u00000q\u0000~\u0000\tq\u0000~\u0000\u0088q\u0000~\u0000\rq\u0000~\u0000\bq\u0000~\u0000\u008cq\u0000~\u0000{q\u0000~\u0000aq"
+"\u0000~\u0000nq\u0000~\u0000\u0007q\u0000~\u0000\u0084q\u0000~\u0000\u0005q\u0000~\u0000\u0006q\u0000~\u0000\nx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
            super(context, "--------------------");
        }

        protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "perPrio");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "linkId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  19 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "classType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "perLink");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "preemptionLevel");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "perCT");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "ASID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "time");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PerPrio = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PerPrio = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LinkId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClassType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ClassType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PerLink = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PerLink = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PreemptionLevel = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PreemptionLevel = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PerCT = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PerCT = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "perPrio");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "linkId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  19 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "classType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "perLink");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "preemptionLevel");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "perCT");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "ASID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "time");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveElement((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        if (("perPrio" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  3 :
                        if (("linkId" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  19 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("classType" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        if (("perLink" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  15 :
                        if (("preemptionLevel" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  6 :
                        if (("perCT" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        if (("ASID" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("time" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, ___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromEnterAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        attIdx = context.getAttribute("", "perPrio");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "linkId");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  19 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "classType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "perLink");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  14 :
                        if (("perPrio" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("preemptionLevel" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("perCT" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "preemptionLevel");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 18;
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  2 :
                        if (("classType" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("perLink" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("linkId" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "perCT");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "ASID");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "time");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            attIdx = context.getAttribute("", "perPrio");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "linkId");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  19 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "classType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "perLink");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  16 :
                            eatText5(value);
                            state = 17;
                            return ;
                        case  7 :
                            eatText6(value);
                            state = 8;
                            return ;
                        case  10 :
                            eatText4(value);
                            state = 11;
                            return ;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "preemptionLevel");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 18;
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "perCT");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "ASID");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "time");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            spawnHandlerFromText((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ASEventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.ShowLinkReservationTypeImpl.this).new Unmarshaller(context)), 19, value);
                            return ;
                        case  13 :
                            eatText1(value);
                            state = 14;
                            return ;
                        case  1 :
                            eatText3(value);
                            state = 2;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
