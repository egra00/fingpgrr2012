//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.03.28 at 12:33:07 CET 
//


package be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl;

public class GenerateIntraTMTypeImpl
    extends be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl
    implements be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.GenerateIntraTMType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
{

    protected boolean has_Minutes;
    protected int _Minutes;
    protected java.lang.String _TrafficMatrixFileName;
    protected java.lang.String _ClusterFileName;
    protected java.lang.String _BGPdirFileName;
    protected boolean has_SamplingRate;
    protected int _SamplingRate;
    protected java.lang.String _NETFLOWdirFileName;
    protected java.lang.String _NETFLOWbaseDirectory;
    protected java.lang.String _BGPbaseDirectory;
    public final static java.lang.Class version = (be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.GenerateIntraTMType.class);
    }

    public int getMinutes() {
        return _Minutes;
    }

    public void setMinutes(int value) {
        _Minutes = value;
        has_Minutes = true;
    }

    public boolean isSetMinutes() {
        return has_Minutes;
    }

    public void unsetMinutes() {
        has_Minutes = false;
    }

    public java.lang.String getTrafficMatrixFileName() {
        return _TrafficMatrixFileName;
    }

    public void setTrafficMatrixFileName(java.lang.String value) {
        _TrafficMatrixFileName = value;
    }

    public boolean isSetTrafficMatrixFileName() {
        return (_TrafficMatrixFileName!= null);
    }

    public void unsetTrafficMatrixFileName() {
        _TrafficMatrixFileName = null;
    }

    public java.lang.String getClusterFileName() {
        return _ClusterFileName;
    }

    public void setClusterFileName(java.lang.String value) {
        _ClusterFileName = value;
    }

    public boolean isSetClusterFileName() {
        return (_ClusterFileName!= null);
    }

    public void unsetClusterFileName() {
        _ClusterFileName = null;
    }

    public java.lang.String getBGPdirFileName() {
        return _BGPdirFileName;
    }

    public void setBGPdirFileName(java.lang.String value) {
        _BGPdirFileName = value;
    }

    public boolean isSetBGPdirFileName() {
        return (_BGPdirFileName!= null);
    }

    public void unsetBGPdirFileName() {
        _BGPdirFileName = null;
    }

    public int getSamplingRate() {
        return _SamplingRate;
    }

    public void setSamplingRate(int value) {
        _SamplingRate = value;
        has_SamplingRate = true;
    }

    public boolean isSetSamplingRate() {
        return has_SamplingRate;
    }

    public void unsetSamplingRate() {
        has_SamplingRate = false;
    }

    public java.lang.String getNETFLOWdirFileName() {
        return _NETFLOWdirFileName;
    }

    public void setNETFLOWdirFileName(java.lang.String value) {
        _NETFLOWdirFileName = value;
    }

    public boolean isSetNETFLOWdirFileName() {
        return (_NETFLOWdirFileName!= null);
    }

    public void unsetNETFLOWdirFileName() {
        _NETFLOWdirFileName = null;
    }

    public java.lang.String getNETFLOWbaseDirectory() {
        return _NETFLOWbaseDirectory;
    }

    public void setNETFLOWbaseDirectory(java.lang.String value) {
        _NETFLOWbaseDirectory = value;
    }

    public boolean isSetNETFLOWbaseDirectory() {
        return (_NETFLOWbaseDirectory!= null);
    }

    public void unsetNETFLOWbaseDirectory() {
        _NETFLOWbaseDirectory = null;
    }

    public java.lang.String getBGPbaseDirectory() {
        return _BGPbaseDirectory;
    }

    public void setBGPbaseDirectory(java.lang.String value) {
        _BGPbaseDirectory = value;
    }

    public boolean isSetBGPbaseDirectory() {
        return (_BGPbaseDirectory!= null);
    }

    public void unsetBGPbaseDirectory() {
        _BGPbaseDirectory = null;
    }

    public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
        return new be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Minutes) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Minutes"));
        }
        if (!has_SamplingRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "SamplingRate"));
        }
        super.serializeBody(context);
    }

    public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Minutes) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Minutes"));
        }
        if (!has_SamplingRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "SamplingRate"));
        }
        context.startAttribute("", "BGPbaseDirectory");
        try {
            context.text(((java.lang.String) _BGPbaseDirectory), "BGPbaseDirectory");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "BGPdirFileName");
        try {
            context.text(((java.lang.String) _BGPdirFileName), "BGPdirFileName");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "NETFLOWbaseDirectory");
        try {
            context.text(((java.lang.String) _NETFLOWbaseDirectory), "NETFLOWbaseDirectory");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "NETFLOWdirFileName");
        try {
            context.text(((java.lang.String) _NETFLOWdirFileName), "NETFLOWdirFileName");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "clusterFileName");
        try {
            context.text(((java.lang.String) _ClusterFileName), "ClusterFileName");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "minutes");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Minutes)), "Minutes");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "samplingRate");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SamplingRate)), "SamplingRate");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "trafficMatrixFileName");
        try {
            context.text(((java.lang.String) _TrafficMatrixFileName), "TrafficMatrixFileName");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        super.serializeAttributes(context);
    }

    public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_Minutes) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "Minutes"));
        }
        if (!has_SamplingRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "SamplingRate"));
        }
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.GenerateIntraTMType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003sr"
+"\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0003ppsr\u0000!com.sun.msv.datatype.xsd.TimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com."
+"sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
+".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
+"e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/"
+"String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
+"/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSche"
+"mat\u0000\u0004timesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 "
+"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.NameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004timet\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$Ep"
+"silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0012\u0001q\u0000~\u0000/sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0014pp"
+"sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlway"
+"sValidxq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#\u0001q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u00005q\u0000~"
+"\u0000 sq\u0000~\u0000)t\u0000\u0010BGPbaseDirectoryq\u0000~\u0000-sq\u0000~\u0000\u000fppq\u0000~\u00002sq\u0000~\u0000)t\u0000\u000eBGPdir"
+"FileNameq\u0000~\u0000-sq\u0000~\u0000\u000fppq\u0000~\u00002sq\u0000~\u0000)t\u0000\u0014NETFLOWbaseDirectoryq\u0000~\u0000-"
+"sq\u0000~\u0000\u000fppq\u0000~\u00002sq\u0000~\u0000)t\u0000\u0012NETFLOWdirFileNameq\u0000~\u0000-sq\u0000~\u0000\u000fppq\u0000~\u00002sq"
+"\u0000~\u0000)t\u0000\u000fclusterFileNameq\u0000~\u0000-sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0014ppsr\u0000 com.sun.msv.d"
+"atatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.I"
+"ntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/dat"
+"atype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0003intq\u0000~\u0000$sr\u0000*com.sun.m"
+"sv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv."
+"datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang"
+"/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstr"
+"aintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWit"
+"hFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbase"
+"Typeq\u0000~\u0000KL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concret"
+"eType;L\u0000\tfacetNameq\u0000~\u0000\u001dxq\u0000~\u0000\u001cppq\u0000~\u0000$\u0000\u0001sr\u0000*com.sun.msv.dataty"
+"pe.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Oppq\u0000~\u0000$\u0000\u0000sr\u0000!com.su"
+"n.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Jq\u0000~\u0000 t\u0000\u0004longq\u0000~\u0000"
+"$sq\u0000~\u0000Nppq\u0000~\u0000$\u0000\u0001sq\u0000~\u0000Uppq\u0000~\u0000$\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd."
+"IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Jq\u0000~\u0000 t\u0000\u0007integerq\u0000~\u0000$sr\u0000,com.sun."
+"msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;c"
+"om.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090"
+"\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Rppq\u0000~\u0000$\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0007decimalq\u0000~\u0000$q\u0000~\u0000ct\u0000\u000efractionDigi"
+"ts\u0000\u0000\u0000\u0000q\u0000~\u0000]t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005va"
+"luexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000]t\u0000\fmaxInclu"
+"sivesq\u0000~\u0000g\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Xq\u0000~\u0000fsr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001"
+"I\u0000\u0005valuexq\u0000~\u0000h\u0080\u0000\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000jsq\u0000~\u0000l\u007f\u00ff\u00ff\u00ffq\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000Mq\u0000~\u0000 s"
+"q\u0000~\u0000)t\u0000\u0007minutesq\u0000~\u0000-sq\u0000~\u0000\u000fppq\u0000~\u0000Hsq\u0000~\u0000)t\u0000\fsamplingRateq\u0000~\u0000-s"
+"q\u0000~\u0000\u000fppq\u0000~\u00002sq\u0000~\u0000)t\u0000\u0015trafficMatrixFileNameq\u0000~\u0000-sr\u0000\"com.sun.m"
+"sv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/m"
+"sv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramm"
+"ar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVers"
+"ionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\t\u0001pq"
+"\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u0000\u0007q\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000~\u0000\u000bq\u0000~\u0000\bq\u0000~\u0000\tq\u0000~\u0000\u000ex"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "minutes");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "NETFLOWbaseDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  25 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  24 :
                        attIdx = context.getAttribute("", "time");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this).new Unmarshaller(context)), 25, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "clusterFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "samplingRate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 21;
                            continue outer;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "BGPbaseDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "NETFLOWdirFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "trafficMatrixFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 24;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "BGPdirFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Minutes = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Minutes = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NETFLOWbaseDirectory = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClusterFileName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SamplingRate = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SamplingRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BGPbaseDirectory = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NETFLOWdirFileName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TrafficMatrixFileName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BGPdirFileName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "minutes");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "NETFLOWbaseDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  25 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  24 :
                        attIdx = context.getAttribute("", "time");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveElement((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this).new Unmarshaller(context)), 25, ___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "clusterFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "samplingRate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 21;
                            continue outer;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "BGPbaseDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "NETFLOWdirFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "trafficMatrixFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 24;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "BGPdirFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        if (("minutes" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("NETFLOWbaseDirectory" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        break;
                    case  25 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  24 :
                        if (("time" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this).new Unmarshaller(context)), 25, ___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromEnterAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this).new Unmarshaller(context)), 25, ___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        if (("clusterFileName" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("samplingRate" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("BGPbaseDirectory" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("NETFLOWdirFileName" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("trafficMatrixFileName" == ___local)&&("" == ___uri)) {
                            state = 22;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("BGPdirFileName" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  15 :
                        attIdx = context.getAttribute("", "minutes");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "NETFLOWbaseDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("BGPdirFileName" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  25 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  24 :
                        attIdx = context.getAttribute("", "time");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveAttribute((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this).new Unmarshaller(context)), 25, ___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "clusterFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 15;
                            continue outer;
                        }
                        break;
                    case  20 :
                        if (("samplingRate" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("BGPbaseDirectory" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("NETFLOWdirFileName" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("clusterFileName" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "samplingRate");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 21;
                            continue outer;
                        }
                        break;
                    case  23 :
                        if (("trafficMatrixFileName" == ___local)&&("" == ___uri)) {
                            state = 24;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "BGPbaseDirectory");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "NETFLOWdirFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  17 :
                        if (("minutes" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("NETFLOWbaseDirectory" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  21 :
                        attIdx = context.getAttribute("", "trafficMatrixFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 24;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "BGPdirFileName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText8(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            eatText8(value);
                            state = 5;
                            return ;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "minutes");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "NETFLOWbaseDirectory");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 9;
                                continue outer;
                            }
                            break;
                        case  25 :
                            revertToParentFromText(value);
                            return ;
                        case  24 :
                            attIdx = context.getAttribute("", "time");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            spawnHandlerFromText((((be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.EventTypeImpl)be.ac.ulg.montefiore.run.totem.scenario.model.jaxb.impl.GenerateIntraTMTypeImpl.this).new Unmarshaller(context)), 25, value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "clusterFileName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 15;
                                continue outer;
                            }
                            break;
                        case  1 :
                            eatText5(value);
                            state = 2;
                            return ;
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "samplingRate");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 21;
                                continue outer;
                            }
                            break;
                        case  19 :
                            eatText4(value);
                            state = 20;
                            return ;
                        case  10 :
                            eatText6(value);
                            state = 11;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "BGPbaseDirectory");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  16 :
                            eatText1(value);
                            state = 17;
                            return ;
                        case  22 :
                            eatText7(value);
                            state = 23;
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "NETFLOWdirFileName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  21 :
                            attIdx = context.getAttribute("", "trafficMatrixFileName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 24;
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "BGPdirFileName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText8(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
