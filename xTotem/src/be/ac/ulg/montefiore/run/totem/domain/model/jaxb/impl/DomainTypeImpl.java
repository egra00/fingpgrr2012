//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.02.29 at 02:59:16 CET 
//


package be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl;

public class DomainTypeImpl implements be.ac.ulg.montefiore.run.totem.domain.model.jaxb.DomainType, com.sun.xml.bind.JAXBObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallableObject, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializable, be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.ValidatableObject
{

    protected boolean has_ASID;
    protected int _ASID;
    protected be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Bgp _Bgp;
    protected be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Igp _Igp;
    protected be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Mpls _Mpls;
    protected java.lang.String _Name;
    protected be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Topology _Topology;
    protected be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Information _Info;
    public final static java.lang.Class version = (be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (be.ac.ulg.montefiore.run.totem.domain.model.jaxb.DomainType.class);
    }

    public int getASID() {
        return _ASID;
    }

    public void setASID(int value) {
        _ASID = value;
        has_ASID = true;
    }

    public boolean isSetASID() {
        return has_ASID;
    }

    public void unsetASID() {
        has_ASID = false;
    }

    public be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Bgp getBgp() {
        return _Bgp;
    }

    public void setBgp(be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Bgp value) {
        _Bgp = value;
    }

    public boolean isSetBgp() {
        return (_Bgp!= null);
    }

    public void unsetBgp() {
        _Bgp = null;
    }

    public be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Igp getIgp() {
        return _Igp;
    }

    public void setIgp(be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Igp value) {
        _Igp = value;
    }

    public boolean isSetIgp() {
        return (_Igp!= null);
    }

    public void unsetIgp() {
        _Igp = null;
    }

    public be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Mpls getMpls() {
        return _Mpls;
    }

    public void setMpls(be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Mpls value) {
        _Mpls = value;
    }

    public boolean isSetMpls() {
        return (_Mpls!= null);
    }

    public void unsetMpls() {
        _Mpls = null;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public boolean isSetName() {
        return (_Name!= null);
    }

    public void unsetName() {
        _Name = null;
    }

    public be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Topology getTopology() {
        return _Topology;
    }

    public void setTopology(be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Topology value) {
        _Topology = value;
    }

    public boolean isSetTopology() {
        return (_Topology!= null);
    }

    public void unsetTopology() {
        _Topology = null;
    }

    public be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Information getInfo() {
        return _Info;
    }

    public void setInfo(be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Information value) {
        _Info = value;
    }

    public boolean isSetInfo() {
        return (_Info!= null);
    }

    public void unsetInfo() {
        _Info = null;
    }

    public be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingEventHandler createUnmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
        return new be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.DomainTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_ASID) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "ASID"));
        }
        context.startElement("", "info");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Info), "Info");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Info), "Info");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Info), "Info");
        context.endElement();
        context.startElement("", "topology");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Topology), "Topology");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Topology), "Topology");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Topology), "Topology");
        context.endElement();
        if (_Mpls!= null) {
            context.startElement("", "mpls");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Mpls), "Mpls");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Mpls), "Mpls");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Mpls), "Mpls");
            context.endElement();
        }
        if (_Igp!= null) {
            context.startElement("", "igp");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Igp), "Igp");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Igp), "Igp");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Igp), "Igp");
            context.endElement();
        }
        if (_Bgp!= null) {
            context.startElement("", "bgp");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Bgp), "Bgp");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Bgp), "Bgp");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Bgp), "Bgp");
            context.endElement();
        }
    }

    public void serializeAttributes(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_ASID) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "ASID"));
        }
        context.startAttribute("", "ASID");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ASID)), "ASID");
        } catch (java.lang.Exception e) {
            be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Name!= null) {
            context.startAttribute("", "name");
            try {
                context.text(((java.lang.String) _Name), "Name");
            } catch (java.lang.Exception e) {
                be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_ASID) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "ASID"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (be.ac.ulg.montefiore.run.totem.domain.model.jaxb.DomainType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sr\u0000\u001dcom.sun.msv.gram"
+"mar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.OneO"
+"rMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuex"
+"p\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000"
+"\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u00002com.sun.msv.grammar.Expres"
+"sion$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0016\u0001q\u0000~\u0000\u001bsr\u0000 com"
+".sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gram"
+"mar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun.msv"
+".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"
+"/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000<be.ac.ulg.montefiore.ru"
+"n.totem.domain.model.jaxb.Informationt\u0000+http://java.sun.com/"
+"jaxb/xjc/dummy-elementssq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017psr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\b"
+"typeNameq\u0000~\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QName"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpressio"
+"n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002"
+"\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004"
+"typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000\u0004infot\u0000\u0000sq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00009be.ac.ulg.montefiore.run.tote"
+"m.domain.model.jaxb.Topologyq\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000"
+"~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\btopologyq\u0000~\u0000Asq\u0000~\u0000\u0011ppsq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000pps"
+"q\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000"
+"\"t\u00005be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Mplsq\u0000~"
+"\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004mplsq\u0000~\u0000Aq\u0000~\u0000!"
+"sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004be.ac.ulg.montefiore.run.t"
+"otem.domain.model.jaxb.Igpq\u0000~\u0000&sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000"
+"<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0003igpq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u000bq\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\u000bpp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0017psq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u00004be.ac.ulg.montefiore.run.totem.domain.model.jaxb.Bgpq\u0000~\u0000&s"
+"q\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0003bgpq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~"
+"\u0000\u0018ppsq\u0000~\u0000)ppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;x"
+"q\u0000~\u00000q\u0000~\u0000At\u0000\bASIdTypeq\u0000~\u00007sr\u0000 com.sun.msv.datatype.xsd.IntTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType"
+"\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetsq\u0000~\u0000yxq\u0000~\u0000.q\u0000~\u00003t\u0000\u0003intq\u0000~\u00007sr\u0000*com.s"
+"un.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun."
+"msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/"
+"lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueCo"
+"nstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTyp"
+"eWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\b"
+"baseTypeq\u0000~\u0000yL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Con"
+"creteType;L\u0000\tfacetNameq\u0000~\u0000#xq\u0000~\u00000ppq\u0000~\u00007\u0000\u0001sr\u0000*com.sun.msv.da"
+"tatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0081ppq\u0000~\u00007\u0000\u0000sr\u0000!co"
+"m.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000}q\u0000~\u00003t\u0000\u0004long"
+"q\u0000~\u00007sq\u0000~\u0000\u0080ppq\u0000~\u00007\u0000\u0001sq\u0000~\u0000\u0087ppq\u0000~\u00007\u0000\u0000sr\u0000$com.sun.msv.datatype."
+"xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000}q\u0000~\u00003t\u0000\u0007integerq\u0000~\u00007sr\u0000,com."
+"sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalex"
+"r\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFac"
+"etT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u0084ppq\u0000~\u00007\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Num"
+"berType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00003t\u0000\u0007decimalq\u0000~\u00007q\u0000~\u0000\u0095t\u0000\u000efraction"
+"Digits\u0000\u0000\u0000\u0000q\u0000~\u0000\u008ft\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J"
+"\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u008ft\u0000\fmaxI"
+"nclusivesq\u0000~\u0000\u0099\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\u008aq\u0000~\u0000\u0098sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u0087"
+"8\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u009a\u0080\u0000\u0000\u0000q\u0000~\u0000\u008aq\u0000~\u0000\u009csq\u0000~\u0000\u009e\u007f\u00ff\u00ff\u00ff\u0000\u0000\u0000\u0000q\u0000~\u00009sq\u0000~\u0000:q\u0000~"
+"\u0000\u007fq\u0000~\u0000Asq\u0000~\u0000\"t\u0000\u0004ASIDq\u0000~\u0000Asq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0018q\u0000~\u0000\u0017psq\u0000~\u0000)ppsr\u0000#com"
+".sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidx"
+"q\u0000~\u0000.q\u0000~\u00003t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
+"ocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006\u0001q\u0000~\u00009sq\u0000~\u0000:q\u0000~\u0000\u00a9q\u0000~\u00003sq\u0000~\u0000"
+"\"t\u0000\u0004nameq\u0000~\u0000Aq\u0000~\u0000!sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clo"
+"sedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7"
+"j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/g"
+"rammar/ExpressionPool;xp\u0000\u0000\u0000\u001e\u0001pq\u0000~\u0000Nq\u0000~\u0000[q\u0000~\u0000hq\u0000~\u0000\u0015q\u0000~\u0000Fq\u0000~\u0000S"
+"q\u0000~\u0000`q\u0000~\u0000mq\u0000~\u0000\bq\u0000~\u0000\u000fq\u0000~\u0000Cq\u0000~\u0000Pq\u0000~\u0000]q\u0000~\u0000jq\u0000~\u0000\u0012q\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000_"
+"q\u0000~\u0000lq\u0000~\u0000\u0006q\u0000~\u0000\'q\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000\tq\u0000~\u0000dq\u0000~\u0000qq\u0000~\u0000\nq\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0000\u00a4"
+"x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context) {
            super(context, "----------------------");
        }

        protected Unmarshaller(be.ac.ulg.montefiore.run.totem.util.jaxb.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.DomainTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        if (("mpls" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  9 :
                        if (("topology" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("title" == ___local)&&("" == ___uri)) {
                            _Info = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("date" == ___local)&&("" == ___uri)) {
                            _Info = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("author" == ___local)&&("" == ___uri)) {
                            _Info = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("description" == ___local)&&("" == ___uri)) {
                            _Info = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("units" == ___local)&&("" == ___uri)) {
                            _Info = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.InformationImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  10 :
                        if (("nodes" == ___local)&&("" == ___uri)) {
                            _Topology = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.TopologyImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.TopologyImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ASID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  19 :
                        if (("routers" == ___local)&&("" == ___uri)) {
                            _Bgp = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.BgpImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.BgpImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("info" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("links" == ___local)&&("" == ___uri)) {
                            _Igp = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.IgpImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.IgpImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  13 :
                        if (("lsp" == ___local)&&("" == ___uri)) {
                            _Mpls = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.MplsImpl) spawnChildFromEnterElement((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.MplsImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  18 :
                        if (("bgp" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  15 :
                        if (("igp" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  21 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ASID = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ASID = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("topology" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  17 :
                        if (("igp" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ASID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  14 :
                        if (("mpls" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  8 :
                        if (("info" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("bgp" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  21 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        state = 15;
                        continue outer;
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("ASID" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            _Igp = ((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.IgpImpl) spawnChildFromEnterAttribute((be.ac.ulg.montefiore.run.totem.domain.model.jaxb.impl.IgpImpl.class), 17, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  21 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        state = 15;
                        continue outer;
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "ASID");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  2 :
                        if (("ASID" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  16 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  21 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  12 :
                            state = 15;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "ASID");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  16 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  21 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            eatText1(value);
                            state = 5;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
